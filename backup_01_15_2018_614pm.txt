using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class ApplicationDriver : System.Web.UI.Page
{
    public static Employee[] employeeArray = new Employee[3];
    public static int count = 0;


    protected void Page_Load(object sender, EventArgs e)
    {
        

    }

    protected void btnInsert_Click(object sender, EventArgs e)
    {
        //Check that the name doesnt exist in the DB already


        //Create the new entry in the array
        employeeArray[count++] = new Employee(int.Parse(txtEmployeeID.Value),txtFirstName.Value, txtLastName.Value, txtMI.Value, txtHouseNum.Value, txtStreet.Value, txtCounty.Value, txtState.Value, txtCountry.Value, txtZip.Value,
            DateTime.Parse(txtDOB.Value), DateTime.Parse(txtHireDate.Value), DateTime.Parse(txtTerminationDate.Value), Double.Parse(txtSalary.Value), int.Parse(txtManagerID.Value),
            "John Morrissey", DateTime.Now);
        resultMessage.Text += " The constructor was called";
    }

    protected void btnClear_Click(object sender, EventArgs e)
    {
        //Clear the text fields
        txtFirstName.Value = "";
        txtLastName.Value = "";
        txtMI.Value = "";
        txtDOB.Value = "";
        txtHouseNum.Value = "";
        txtStreet.Value = "";
        txtState.Value = "";
        txtCounty.Value = "";
        txtCountry.Value = "";
        txtZip.Value = "";
        txtHireDate.Value = "";
        txtTerminationDate.Value = "";
        txtSalary.Value = "";
        txtManagerID.Value = "";
        txtEmployeeID.Value = "";



    }

    protected void btnCommit_Click(object sender, EventArgs e)
    {
        
        for (int i = 0; i < count; i++)
        {
            insertIntoDB(employeeArray[i]);
            resultMessage.Text += "Committed";
        }
    }

    protected void btnExit_Click(object sender, EventArgs e)
    {
        
    }

    private void deleteFromDB()
    {

    }

    private void insertIntoDB(Employee a)
    {
        
        //When the program runs initially it should delete all the info in the tables
        try
        {
            
            //Creates a new sql connection and links the application to the lab 1 database
            System.Data.SqlClient.SqlConnection sc = new System.Data.SqlClient.SqlConnection();
            sc.ConnectionString = @"Server =Localhost; Database=Lab1;Trusted_Connection=Yes;";
            
            //Opens the sql connection
            sc.Open();
            
            //Creates a new sql insert command to insert the data from the arrays into the Person table
            System.Data.SqlClient.SqlCommand insert = new System.Data.SqlClient.SqlCommand();
            insert.Connection = sc;
            insert.CommandText = "insert into [dbo].[EMPLOYEE] values (" + a.EmployeeID + ", '" + a.FirstName + "','" + a.LastName + "','" + a.MiddleName + "','" + a.HouseNum + "','"
                    + a.Street + "','" + a.County + "','" + a.State + "','" + a.Country + "','" + a.Zip + "','" + a.DateOfBirth + "','" + a.HireDate + "','" + a.TerminationDate + "',"
                    + a.Salary + "," + a.ManagerID + ",'" + a.LastUpdatedBy + "','" + a.LastUpdated + "')";
            insert.ExecuteNonQuery();
            
            sc.Close();

        }
        catch (Exception c)
        {
            //Shows an error message if there is a problem connecting to the database
            resultMessage.Text += "Database Error";
            resultMessage.Text += c.Message;
        }
        //Opens the sql connection
        
    }

    
    
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

/// <summary>
/// This is the employee class. 
/// </summary>
public class Employee
{
    private int employeeID;
    private string fName;
    private string lName;
    private string mName;
    private string houseNum;
    private string street;
    private string county;
    private string state;
    private string country;
    private string zip;
    private DateTime dateOfBirth;
    private DateTime hireDate;
    private DateTime terminationDate;
    private double salary;
    private int managerID;
    private string updatedBy;
    private DateTime updatedDate;
    public static int count = 0;

    public Employee(int employeeID, string fName, string lName, string mName, string houseNum, string street, string county, string state, string country, string zip,
        DateTime dateOfBirth, DateTime hireDate, DateTime terminationDate, double salary, int managerID, string updatedBy, DateTime updatedDate)
    {
        EmployeeID = employeeID;
        FirstName = fName;
        LastName = lName;
        MiddleName = mName;
        HouseNum = houseNum;
        Street = street;
        County = county;
        State = state;
        Country = country;
        Zip = zip;
        DateOfBirth = dateOfBirth;
        HireDate = hireDate;
        TerminationDate = terminationDate;
        Salary = salary;
        ManagerID = managerID;
        LastUpdatedBy = updatedBy;
        LastUpdated = updatedDate;
                
        count++;

    }

    public int EmployeeID
    {
        get
        {
            return employeeID;
        }
        private set
        {
            employeeID = value;
        }
    }
    public string FirstName
    {
        get
        {
            return fName;
        }
        private set
        {
            fName = value;
        }
    }
    public string LastName
    {
        get
        {
            return lName;
        }
        private set
        {
            lName = value;
        }
    }
    public string MiddleName
    {
        get
        {
            return mName;
        }
        private set
        {
            mName = value;
        }

    }
    public string HouseNum
    {
        get
        {
            return houseNum;
        }
        private set
        {
            houseNum = value;
        }
    }
    public string Street
    {
        get
        {
            return street;
        }
        private set
        {
            street = value;
        }
    }
    public string County
    {
        get
        {
            return county;
        }
        private set
        {
            county = value;
        }
    }
    public string State
    {
        get
        {
            return state;
        }
        private set
        {
            state = value;
        }
    }
    public string Country
    {
        get
        {
            return country;
        }
        private set
        {
            country = value;
        }
    }

    public string Zip
    {
        get
        {
            return zip;
        }
        private set
        {
            zip = value;
        }
    }
    public DateTime DateOfBirth
    {
        get
        {
            return dateOfBirth;
        }
        private set
        {
            dateOfBirth = value;
        }
    }
    public DateTime HireDate
    {
        get
        {
            return hireDate;
        }
        private set
        {
            hireDate = value;
        }
    }
    public DateTime TerminationDate
    {
        get
        {
            return terminationDate;
        }
        private set
        {
            terminationDate = value;
        }
    }
    public double Salary
    {
        get
        {
            return salary;
        }
        private set
        {
            salary = value;
        }
    }
    public int ManagerID
    {
        get
        {
            return managerID;
        }
        private set
        {
            managerID = value;
        }
    }
    public string LastUpdatedBy
    {
        get
        {
            return updatedBy;
        }
        private set
        {
            updatedBy = value;
        }
    }
    public DateTime LastUpdated
    {
        get
        {
            return updatedDate;
        }
        private set
        {
            updatedDate = value;
        }
    }




/*
    public void setEmployeeID(int employeeID)
    {
        this.employeeID = employeeID;
    }
    public void setfName(string fName)
    {
        this.fName = fName;
    }
    public void setlName(string lName)
    {
        this.lName = lName;
    }
    public void setmName(string mName)
    {
        this.mName = mName;
    }
    public void setHouseNum(string houseNum)
    {
        this.houseNum = houseNum;
    }
    public void setStreet(string street)
    {
        this.street = street;
    }
    public void setCounty(string county)
    {
        this.county = county;
    }
    public void setState(string state)
    {
        this.state = state;
    }
    public void setCountry(string country)
    {
        this.country = country;
    }
    public void setZip(string zip)
    {
        this.zip = zip;
    }
    public void setDateOfBirth(DateTime dateOfBirth)
    {
        this.dateOfBirth = dateOfBirth;
    }
    public void setHireDate(DateTime hireDate)
    {
        this.hireDate = hireDate;
    }
    public void setTerminationDate(DateTime terminationDate)
    {
        this.terminationDate = terminationDate;
    }
    public void setSalary(double salary)
    {
        this.salary = salary;
    }
    public void setManagerID(int managerID)
    {
        this.managerID = managerID;
    }
    public void setUpdatedBy(string updatedBy)
    {
        this.updatedBy = updatedBy;
    }
    public void setUpdatedDate(DateTime updatedDate)
    {
        this.updatedDate = updatedDate;
    } */

    
}