using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;



public partial class ApplicationDriver : System.Web.UI.Page
{
    public static Employee[] employeeArray = new Employee[3];
    public static int count = 0;


    protected void Page_Load(object sender, EventArgs e)
    {
        //On page load gets the information from the DB
        selectFromDB();
    }

    protected void btnInsert_Click(object sender, EventArgs e)
    {

        try
        {

            if (checkName(txtFirstName.Value, txtLastName.Value) == false && checkID(int.Parse(txtEmployeeID.Value)) == false)
            {
                //Check that the name doesnt exist in the DB already
                string middleInitial = "";
                string state = "";
                DateTime terminationDate = DateTime.MinValue;
                int managerID = 0;

                //if the text fields are empty then set the values to NULL
                if (txtMI.Value == "")
                {
                    middleInitial = "NULL";
                }
                else
                {
                    middleInitial = txtMI.Value;
                }
                if (txtState.Value == "")
                {
                    state = "NULL";
                }
                else
                {
                    state = txtState.Value;
                }
                if (txtTerminationDate.Value == "")
                {
                    terminationDate = DateTime.MinValue;
                }
                else
                {
                    terminationDate = DateTime.Parse(txtTerminationDate.Value);
                }
                if (txtManagerID.Value == "")
                {
                    managerID = -1;
                }
                else
                {
                    managerID = int.Parse(txtManagerID.Value);
                }
                //Create the new entry in the array
                employeeArray[count++] = new Employee(int.Parse(txtEmployeeID.Value), txtFirstName.Value, txtLastName.Value, middleInitial, txtHouseNum.Value, txtStreet.Value, txtCounty.Value, state, txtCountry.Value, txtZip.Value,
                    DateTime.Parse(txtDOB.Value), DateTime.Parse(txtHireDate.Value), terminationDate, Double.Parse(txtSalary.Value), managerID,
                    "John Morrissey", DateTime.Now);
                resultMessage.Text += employeeArray[count - 1].FirstName + " " + employeeArray[count - 1].LastName;
                if (count >= 3)
                {
                    btnInsert.Enabled = false;
                }
            }
            else
            {
                resultMessage.Text += "This user already exists";
            }
        }
        catch (Exception c)
        {
            resultMessage.Text += c;
        }
        clearFields();
    }

    protected void btnClear_Click(object sender, EventArgs e)
    {
        //Calls the clear fields method
        clearFields();

    }

    protected void btnCommit_Click(object sender, EventArgs e)
    {
        //First delete the previous data from the database
        //Then commit the employee array to the database
        deleteFromDB();

        for (int i = 0; i < count; i++)
        {
            insertIntoDB(employeeArray[i]);

            resultMessage.Text += "Committed";
        }
        for (int a = 0; a < count; a++)
        {
            Array.Clear(employeeArray, 0, employeeArray.Length);
        }
        btnInsert.Enabled = true;
        count = 0;
        clearFields();
        
        
    }

    protected void btnExit_Click(object sender, EventArgs e)
    {
        //Exits the program
        Environment.Exit(0);
    }

    private void deleteFromDB()
    {
        //When the program runs initially it should delete all the info in the tables
        try
        {

            //Creates a new sql connection and links the application to the lab 1 database
            System.Data.SqlClient.SqlConnection sqlc = connectToDB();

            //Deletes all of the information in the Database table Employee
            System.Data.SqlClient.SqlCommand insert = new System.Data.SqlClient.SqlCommand();
            insert.Connection = sqlc;
            insert.CommandText = "delete from [dbo].[EMPLOYEE]";
            insert.ExecuteNonQuery();

            sqlc.Close();

        }
        catch (Exception c)
        {
            //Shows an error message if there is a problem connecting to the database
            resultMessage.Text += "Database Error 0";
            resultMessage.Text += c.Message;
            
        }
    }


    private System.Data.SqlClient.SqlConnection connectToDB()
    {
        try
        {
            //Connects to the database and returns the connection
            System.Data.SqlClient.SqlConnection sc = new System.Data.SqlClient.SqlConnection();
            sc.ConnectionString = @"Server =Localhost; Database=Lab1;Trusted_Connection=Yes";
            sc.Open();
            return sc;
        }
        catch (Exception c)
        {
            //Shows an error message if there is a problem connecting to the database
            resultMessage.Text += "Database Error 1";
            resultMessage.Text += c.Message;
            return null;
        }
        
    }

    private void insertIntoDB(Employee a)
    {

        //When the program runs initially it should delete all the info in the tables
        try
        {

            System.Data.SqlClient.SqlConnection sqlc = connectToDB();

            //Creates a new sql insert command to insert the data from the arrays into the Employee table
            System.Data.SqlClient.SqlCommand insert = new System.Data.SqlClient.SqlCommand();
            insert.Connection = sqlc;
            /* Create the insert statement 
             * if the user doesn't input data for the non-required fields
             * then NULL values are input into the database */
            insert.CommandText += "insert into [dbo].[EMPLOYEE] values (" + a.EmployeeID + ", '" + a.FirstName + "','" + a.LastName;
            if (a.MiddleName == "NULL")
            {
                insert.CommandText += "',NULL,'";
            }
            else
            {
                insert.CommandText += "','" + a.MiddleName + "','";
            }
            
            insert.CommandText += a.HouseNum + "','" + a.Street + "','" + a.County;
            if (a.State == "NULL")
            {
                insert.CommandText += "',NULL,'";
            }
            else
            {
                insert.CommandText += "','" + a.State + "','";
            }
            
            insert.CommandText += a.Country + "','" + a.Zip + "','" + a.DateOfBirth + "','" + a.HireDate;
            if (a.TerminationDate == DateTime.MinValue)
            {
                insert.CommandText += "',NULL,";
            }
            else
            {
                insert.CommandText += "','" + a.TerminationDate + "',";
            }
            
            insert.CommandText += a.Salary;

            if (a.ManagerID == -1)
            {
                insert.CommandText += ",NULL,'";
            }
            else
            {
                insert.CommandText += "," + a.ManagerID + ",'";
            }
            insert.CommandText += a.LastUpdatedBy + "','" + a.LastUpdated + "')";

            
            insert.ExecuteNonQuery();

            sqlc.Close();

        }
        catch (Exception c)
        {
            //Shows an error message if there is a problem connecting to the database
            resultMessage.Text += "Database Error 2";
            resultMessage.Text += c.Message;
        }


    }

    private void selectFromDB()
    {
        try
        {
            //Connect to the DB
            System.Data.SqlClient.SqlConnection sqlc = connectToDB();

            //Creates a new sql select command to select the data from the skills table
            System.Data.SqlClient.SqlCommand select = new System.Data.SqlClient.SqlCommand();
            select.Connection = sqlc;
            select.CommandText = "select SKILLNAME from [dbo].[SKILL]";
            System.Data.SqlClient.SqlDataReader reader;

            reader = select.ExecuteReader();
            
            
            while (reader.Read())
            {                
                dropDownSkills.Items.Add(reader.GetString(0));
                
            }
            sqlc.Close();
        }
        catch (Exception c)
        {
            //Shows an error message if there is a problem connecting to the database
            resultMessage.Text += "Database Error 3";
            resultMessage.Text += c.Message;
        }
    }

    protected Boolean checkName(string firstName, string lastName)
    {
        //this checks whether the name already exists in the array
        string arrayName = "";
        string txtBoxName = "";
        txtBoxName = firstName.ToUpper() + lastName.ToUpper();
        Boolean result;

        for (int i = 0; i < count; i++)
        {
            arrayName = employeeArray[i].FirstName.ToUpper() + employeeArray[i].LastName.ToUpper();
            if (arrayName == txtBoxName)
            {
                result = true;
                return result;
            }
            
        }

        return false;

        
    }

    private Boolean checkID(int id)
    {
        //This checks whether the ID number exists in the array
        for (int i = 0; i < count; i++)
        {
            if(id == employeeArray[i].EmployeeID)
            {
                return true;
            }
        }
        return false;
    }

    private void clearFields()
    {
        //Clear the text fields
        txtFirstName.Value = "";
        txtLastName.Value = "";
        txtMI.Value = "";
        txtDOB.Value = "";
        txtHouseNum.Value = "";
        txtStreet.Value = "";
        txtState.Value = "";
        txtCounty.Value = "";
        txtCountry.Value = "";
        txtZip.Value = "";
        txtHireDate.Value = "";
        txtTerminationDate.Value = "";
        txtSalary.Value = "";
        txtManagerID.Value = "";
        txtEmployeeID.Value = "";

        txtFirstName.Focus();
    }

    public void checkField(object sender, EventArgs e)
    {
        resultMessage.Text += "WOW IT WORKS";
    }

<%@ Page Language="C#" AutoEventWireup="true" CodeFile="Lab1.aspx.cs" Inherits="ApplicationDriver"  %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>John Morrissey Lab 1</title>

    
    <style>
        
        #Label1 {
            font-size: 200%;
        }

        .formLabel {

        }

        .longInput {
            width: 30%;
            
        }

        .mediumInput {
            width: 12%;
            
        }

        .shortInput {
            width: 5%;
            
        }

        input[type=text] {
            color: whitesmoke;
            background-color: midnightblue;
            border: none;
            border-radius: 4px;
        }

        .btn {
            margin: 5px;
            border-radius: 4px;
            background-color: midnightblue;
            color: whitesmoke;
        }

        
        .auto-style1 {
            width: 206px;
        }

        
        .auto-style2 {
            width: 1003px;
            margin-right: 81px;
        }
        .auto-style3 {
            width: 744px;
        }

        
    </style>

    
</head>
<body>
    <form id="form1" runat="server">
    <p>
    
        <asp:Label ID="Label1" runat="server" Text="Label" >Employee Information</asp:Label>
    
    </p>
    
       
    
    <!-- This is the table that contains my user inputs 
        The user information will be seperated into 3 sections-->
    <table class="auto-style2"  >
        <tr>
            <td class="auto-style1">First Name</td>
            <td class="auto-style3"><input id="txtFirstName" runat="server" class="longInput" type="text" maxlength="20" onblur="checkField()"/></td>
            <td><asp:RequiredFieldValidator ID="reqFirstNameInput" ControlToValidate="txtFirstName" Text="(Required)" runat="server"  ></asp:RequiredFieldValidator> </td>
        </tr>
        <tr>
            <td class="auto-style1">Last Name</td>
            <td class="auto-style3"><input id="txtLastName" runat="server" class="longInput" type="text" maxlength="30"  /></td>
            <td><asp:RequiredFieldValidator ID="reqLastNameInput" ControlToValidate="txtLastName" Text="(Required)" runat="server" ></asp:RequiredFieldValidator> </td>
        </tr>
        <tr>
            <td class="auto-style1">MI*</td>
            <td class="auto-style3"> <input id="txtMI"  runat="server" class="shortInput" type="text" maxlength="1" /></td>
        </tr>
        <tr>
            <td class="auto-style1">DOB</td>
            <td class="auto-style3"> <input placeholder="YYYY-MM-DD" id="txtDOB" runat="server" class="mediumInput" type="text" maxlength="10" /></td>
        </tr>
        <tr>
            <!-- Insert a line break between the first section of employee info -->
            <td class="auto-style1"><br /></td>
        </tr>

        <tr>
            <td class="auto-style1">House Number</td>
            <td class="auto-style3"> <input id="txtHouseNum" runat="server" class="mediumInput" type="text" maxlength="10"/></td>
        </tr>
        <tr>
            <td class="auto-style1">Street</td>
            <td class="auto-style3"> <input id="txtStreet" runat="server" class="longInput" type="text" maxlength="20"/></td>
        </tr>
        <tr>
            <td class="auto-style1">County/City</td>
            <td class="auto-style3"> <input id="txtCounty" runat="server" class="longInput" type="text" maxlength="25"/></td>
        </tr>
        <tr>
            <td class="auto-style1">State Abb*</td>
            <td class="auto-style3"> <input id="txtState" maxlength="2" runat="server" class="shortInput" type="text" /></td>
        </tr>
        <tr>
            <td class="auto-style1">Country Abb</td>
            <td class="auto-style3"> <input id="txtCountry" maxlength="2" runat="server" class="shortInput" type="text" /></td>
        </tr>
        <tr>
            <td class="auto-style1">Zip Code</td>
            <td class="auto-style3"> <input id="txtZip" runat="server" class="mediumInput" type="text" maxlength="5"/></td>
        </tr>
        <tr>
            <!-- Insert a line break between the first and second section of employee info -->
            <td class="auto-style1"><br /></td>
        </tr>

        <tr>
            <td class="auto-style1">Hire Date</td>
            <td class="auto-style3"> <input id="txtHireDate" runat="server" placeholder="YYYY-MM-DD" class="mediumInput" type="text" maxlength="10"/></td>
        </tr>
        <tr>
            <td class="auto-style1">Termination Date*</td>
            <td class="auto-style3"> <input id="txtTerminationDate" runat="server" placeholder="YYYY-MM-DD" class="mediumInput" type="text" maxlength="10"/></td>
        </tr>
        <tr>
            <td class="auto-style1">Salary</td>
            <td class="auto-style3"> <input id="txtSalary" runat="server" placeholder="e.g. 50000" class="mediumInput" type="text" /></td>
        </tr>
        <tr>
            <td class="auto-style1">Employee ID</td>
            <td class="auto-style3"> <input id="txtEmployeeID" runat="server" class="shortInput" type="text" /> </td>
        </tr>
        <tr>
            <td class="auto-style1">Manager ID*</td>
            <td class="auto-style3"> <input id="txtManagerID" runat="server" class="shortInput" type="text" /></td>
        </tr>
        
        <tr>
            <td class="auto-style1">Skills</td>
            <td class="auto-style3"><asp:DropDownList CssClass="longInput" ID="dropDownSkills" runat="server" >
                </asp:DropDownList >
            </td>
        </tr>
        
    </table>
    <p>*Fields are optional</p>
    <!-- These are the buttons that provide functionality -->
    <section>
        <asp:Button CssClass="btn" ID="btnInsert" runat="server" OnClick="btnInsert_Click" Text="Insert"  />
        <asp:Button CssClass="btn" ID="btnClear" runat="server" OnClick="btnClear_Click" Text="Clear" />
        <asp:Button CssClass="btn" ID="btnCommit" runat="server" OnClick="btnCommit_Click" Text="Employee Commit" />
        <asp:Button CssClass="btn" ID="btnExit" runat="server" OnClick="btnExit_Click" Text="Exit"  />


    </section>
    </form>
    <footer>
        <asp:Label ID="resultMessage" runat="server" ></asp:Label>
        
    </footer>
</body>

    
</html>